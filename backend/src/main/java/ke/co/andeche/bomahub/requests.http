### Register new user
POST http://192.168.88.251:8080/api/auth/register
Content-Type: application/json

{
  "username": "mado",
  "password": "password123",
  "email": "test@example.com",
  "name": "Test User",
  "role": "ADMIN"
}

### Login
POST http://192.168.88.251:8080/api/auth/login
Content-Type: application/json

{
  "username": "testuser",
  "password": "password123"
}

### Get current user
GET http://192.168.88.251:8080/api/auth/me

### Debug authentication
GET http://192.168.88.251:8080/api/auth/debug

### Logout
POST http://192.168.88.251:8080/api/auth/logout

# User Management
### Get all users
GET http://192.168.88.251:8080/api/users

### Get user by ID
GET http://192.168.88.251:8080/api/users/1

### Create user
POST http://192.168.88.251:8080/api/users
Content-Type: application/json

{
  "username": "newuser",
  "password": "password123",
  "email": "new@example.com",
  "name": "New User",
  "role": "USER"
}

### Update user
PUT http://192.168.88.251:8080/api/users/1
Content-Type: application/json

{
  "name": "Updated User",
  "email": "updated@example.com",
  "role": "MANAGER"
}

### Delete user
DELETE http://192.168.88.251:8080/api/users/1

# Organization Management
### Get all organizations
GET http://192.168.88.251:8080/api/organizations

### Get organization by ID
GET http://192.168.88.251:8080/api/organizations/1

### Get organization by verification code
GET http://192.168.88.251:8080/api/organizations/verify/ORG123

### Create organization
POST http://192.168.88.251:8080/api/organizations
Content-Type: application/json

{
  "name": "Test Organization",
  "address": "123 Main St",
  "phone": "1234567890",
  "email": "org@example.com",
  "verificationCode": "ORG123"
}

### Update organization
PUT /api/organizations/1
Content-Type: application/json

{
  "name": "Updated Organization",
  "phone": "9876543210"
}

### Delete organization
DELETE /api/organizations/1


### Get all properties
GET 192.168.88.251:8080/api/properties

### Get properties by organization
GET 192.168.88.251:8080/api/properties/organization/1

### Get property by ID
GET 192.168.88.251:8080/api/properties/1

### Create property
POST 192.168.88.251:8080/api/properties
Content-Type: application/json

{
  "name": "Residential Complex",
  "address": "456 Park Ave",
  "description": "Modern apartment building",
  "type": "residential",
    "organization": {
        "id": 1
    }
}

### Update property
PUT 192.168.88.251:8080/api/properties/1
Content-Type: application/json

{
  "name": "Updated Property",
  "description": "Renovated building"
}

### Delete property
DELETE 192.168.88.251:8080/api/properties/1


### Get all floors
GET 192.168.88.251:8080/api/floors

### Get floors by property
GET 192.168.88.251:8080/api/floors/property/1

### Get floor by ID
GET 192.168.88.251:8080/api/floors/1

### Create floor
POST 192.168.88.251:8080/api/floors
Content-Type: application/json

{
  "name": "Third Floor",
  "property": {
    "id": 1
  }
}

### Update floor
PUT /api/floors/1
Content-Type: application/json

{
  "name": "Updated Floor"
}

### Delete floor
DELETE 192.168.88.251:8080/api/floors/1

###
GET 192.168.88.251:8080/api/units

# Unit Management (continuing)
### Get units by property
GET 192.168.88.251:8080/api/units/property/1

### Get units by property and status
GET 192.168.88.251:8080/api/units/property/1/status/available

### Get units by floor
GET 192.168.88.251:8080/api/units/floor/1

### Get unit by ID
GET 192.168.88.251:8080/api/units/1

### Create unit
POST 192.168.88.251:8080/api/units
Content-Type: application/json

{
  "unitNumber": "A101",
  "status": "available",
  "property": {
    "id": 1
  },
  "floor": {
    "id": 1
  }
}

### Update unit
PUT 192.168.88.251:8080/api/units/1
Content-Type: application/json

{
  "unitNumber": "A102",
  "status": "available"
}

### Update unit status
PATCH 192.168.88.251:8080/api/units/1/status
Content-Type: application/json

{
  "status": "occupied"
}

### Delete unit
DELETE 192.168.88.251:8080/api/units/1

# Tenant Management
### Get all tenants
GET 192.168.88.251:8080/api/tenants

### Get tenants by property
GET 192.168.88.251:8080/api/tenants/property/1

### Get tenant by ID
GET 192.168.88.251:8080/api/tenants/1

### Get tenant by ID number
GET 192.168.88.251:8080/api/tenants/id-number/ABC123456

### Get tenant by email
GET 192.168.88.251:8080/api/tenants/email/tenant@example.com

### Create tenant
POST 192.168.88.251:8080/api/tenants
Content-Type: application/json

{
  "name": "John Doe",
  "email": "john@example.com",
  "phone": "1234567890",
  "idNumber": "ID12345",
  "emergencyContact": "9876543210",
  "property": {
    "id": 1
  }
}

### Update tenant
PUT 192.168.88.251:8080/api/tenants/1
Content-Type: application/json

{
  "name": "John Smith",
  "phone": "5551234567"
}

### Delete tenant
DELETE 192.168.88.251:8080/api/tenants/1

# Unit Tenancy Management
### Get all unit tenancies
GET 192.168.88.251:8080/api/unit-tenancy

### Get unit tenancies by property
GET 192.168.88.251:8080/api/unit-tenancy/property/1

### Get unit tenancies by tenant
GET 192.168.88.251:8080/api/unit-tenancy/tenant/1

### Get unit tenancies by unit
GET 192.168.88.251:8080/api/unit-tenancy/unit/1

### Get active unit tenancy for unit
GET 192.168.88.251:8080/api/unit-tenancy/unit/1/active

### Get unit tenancy by ID
GET 192.168.88.251:8080/api/unit-tenancy/1

### Create unit tenancy
POST 192.168.88.251:8080/api/unit-tenancy
Content-Type: application/json

{
  "monthlyRent": 1000.00,
  "status": "active",
  "startDate": "2023-01-01",
  "tenant": {
    "id": 1
  },
  "unit": {
    "id": 1
  },
  "property": {
    "id": 1
  }
}

### Update unit tenancy
PUT 192.168.88.251:8080/api/unit-tenancy/1
Content-Type: application/json

{
  "monthlyRent": 1100.00
}

### End tenancy
PATCH 192.168.88.251:8080/api/unit-tenancy/1/end

### Delete unit tenancy
DELETE 192.168.88.251:8080/api/unit-tenancy/1

# Payment Management
### Get all payments
GET 192.168.88.251:8080/api/payments

### Get payments by unit tenancy
GET 192.168.88.251:8080/api/payments/unit-tenancy/1

### Get payments by property
GET 192.168.88.251:8080/api/payments/property/1

### Get payments by property and status
GET 192.168.88.251:8080/api/payments/property/1/status/pending

### Get payment by ID
GET 192.168.88.251:8080/api/payments/1

### Create payment
POST 192.168.88.251:8080/api/payments
Content-Type: application/json

{
  "amount": 1000.00,
  "description": "January Rent",
  "paymentStatus": "pending",
  "dueDate": "2023-01-05",
  "unitTenancy": {
    "id": 1
  },
  "property": {
    "id": 1
  }
}

### Update payment
PUT 192.168.88.251:8080/api/payments/1
Content-Type: application/json

{
  "amount": 1000.00,
  "paymentStatus": "paid",
  "paymentDate": "2023-01-03",
  "paymentMethod": "bank",
  "referenceNumber": "TXN123456"
}

### Update payment status
PATCH 192.168.88.251:8080/api/payments/1/status
Content-Type: application/json

{
  "status": "paid"
}

### Delete payment
DELETE 192.168.88.251:8080/api/payments/1

# Dashboard
### Get property stats
GET 192.168.88.251:8080/api/dashboard/property/1/stats